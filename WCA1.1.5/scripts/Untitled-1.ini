
Added new script module @minecraft/diagnostics version 1.0.0-beta. This module is dedicated server only for now and allows script modules to connect their script packs to Sentry. This enables remote error tracking and monitoring for script packs.
@minecraft/server
Component minecraft:fluidContainer has been renamed to minecraft:fluid_container in V2.

World

Added getDifficulty(): Difficulty method to beta. This method gets the worlds current game difficulty.

Added setDifficulty(difficulty: Difficulty): void method to beta. This method sets the worlds current game difficulty.

BlockMapColorComponent scripting API is now read-only

BlockMapColorComponent scripting API fields color and tintMethod are now properties instead of methods

Fixed an issue where native constructors were not properly checking privileges when being called. Constructors now check privileges properly and produce correct errors when being used in Early Execution privilege.

Deprecated ItemUseOnBeforeEvent in @minecraft/server 2.0.0-beta. Use PlayerInteractWithBlockBeforeEvent instead.

Deprecated ItemUseOnAfterEvent in @minecraft/server 2.0.0-beta. Use PlayerInteractWithBlockAfterEvent instead.

BlockDestructionParticlesComponent API has been added to @minecraft/server 2.0.0-beta

EntityScaleComponent has been changed to read-only in version 2.0.0-beta

Fixed a bug where call methods on Player.inputInfo, Player.inputPermissions, or Player.aimAssist on a player that left and rejoined the world would throw an error.

@minecraft/server-net
Updated the execution privilege of most APIs to allow them to be called in read-only contexts ("before" events)
Added new error InternalHttpRequestError
An error thrown when a platform-level HTTP error occurs. Information provided in this class may be useful for diagnostics purposes but will differ from platform to platform.
Added new error MalformedHttpRequestError
An error thrown when a malformed HTTP request is attempted to be sent.
@minecraft/server-ui
ActionFormData
Added method divider(): ActionFormData;. It adds a section divider into the form.
Added method header(text: minecraftserver.RawMessage): ActionFormData;. It adds a header into the form.
Added method label(text: minecraftserver.RawMessage): ActionFormData;. It adds a label into the form.
ModalFormData
Added method divider(): ModalFormData;. It adds a section divider into the form.
Added method header(text: minecraftserver.RawMessage): ModalFormData;. It adds a header into the form.
Added method label(text: minecraftserver.RawMessage): ModalFormData;. It adds a label into the form.
@minecraft/server 2.0.0-beta
The beta for @minecraft/server has been updated to 2.0.0-beta. This signifies that breaking changes have occurred, largely related to script execution timing. Version 1.X will continue to function as-is.

Visit our documentation portal for more information in the near future.

Added new privilege EarlyExecution

2.0.0-beta and higher now executes with the early execution privilege, scripting below 2.0.0-beta will continue to execute without early execution
All after and before event signals subscribeandunsubscribe` methods can now be called in early execution
The following System methods can now be called in early execution
clearJob
clearRun
run
runInterval
runJob
runTimeout
waitTicks
BlockComponentRegistry method registerCustomComponent can now be called in early execution
ItemComponentRegistry method registerCustomComponent can now be called in early execution
Added startup property to SystemBeforeEvents

Added StartupEvent

Added StartupEventSignal

WorldAfterEvents renamed property worldInitialize to worldLoad

WorldBeforeEvents removed property worldInitialize

WorldInitializeAfterEvent renamed to WorldLoadAfterEvent

WorldInitializeAfterEventSignal renamed to WorldLoadAfterEventSignal

Removed WorldInitializeBeforeEvent

Removed WorldInitializeBeforeEventSignal

Removed Dimension.runCommandAsync as most commands did not actually run asynchronously. If you are looking to run a function asynchronously, please investigate using Jobs via System.runJob.

EntityComponent.getEntity method throws if the underlying entity is invalid (instead of return undefined previously).

EntityInventoryComponent.containerproperty throws if the underlying entity is invalid (instead of return undefined previously).

isValid methods on various classes have been changed to read only properties

getComponents, getComponent and hasComponent now throw if the Entity is invalid

applyKnockback method now takes a VectorXZ parameter for the knockback horizontal force (which includes the strength/magnitude), as well as a vertical strength parameter. To convert from V1, you should normalize your previous direction vector and multiply it by the old horizontal strength value. Vertical strength is the same as before.

EffectType

getName method now always returns the minecraft: namespace prefix along with the name
Effect

typeId property now always returns the minecraft: namespace prefix along with the name
minecraft:air item has been removed (it is still a valid block)

Promises are now flushed along with after events and system tasks

system.waitTicks() now can accept an argument bounds of 0 minimum to run this tick

Added a GraphicsMode enum and Player.graphicsMode to query a player's current graphics mode on the server.

Added system.isEditorWorld property into @minecraft/server in beta

BlockLocationIterator

Added isValid(): boolean method to beta. This method checks if the iterator as been invalidated by modifying the underlining block volume.
BlockMapColorComponent API has been added to beta

TintMethod enum has been added to beta

Early execution changes in version @minecraft/server 2.0.0-beta

The following RegistrationBuilder methods can now be called in early execution
batch
maxAttempts
maxTicks
padding
required
requiredSuccessfulAttempts
rotateTest
setupTicks
structureName
tag
register function can now be called in early execution
registerAsync function can now be called in early execution
Fixed a bug where the typeid property of the Effect class was being translated based on your language option.

Raised the limit for Lore Entry length from 50 to 1000 and the number of lines from 20 to 100 when using ItemStack.setLore

Added three new methods to Player . These Entity Overrides are only applied to the target Player. Changes are not applied until the next tick and will not apply to other players.

setPropertyOverrideForEntity: Overrides an Entity Property on the target Entity to the provided value. This property must be client synced.
removePropertyOverrideForEntity: Removes the override of the specified Entity Property on the target Entity.
clearPropertyOverridesForEntity: Removes all overrides of any Entity Properties on the target Entity.




minecraft/server 2.0.0-beta
Бета-версия @minecraft/server обновлена до 2.0.0-beta. Это означает, что были внесены критические изменения, в основном связанные с временем выполнения скриптов. Версия 1.X продолжит работать в прежнем режиме.

В ближайшее время более подробную информацию можно будет найти на нашем портале документации.

Добавлено:
Новое право EarlyExecution

Версия 2.0.0-beta и выше теперь выполняется с привилегией раннего выполнения. Скрипты ниже 2.0.0-beta будут выполняться без неё.

Все методы subscribe и unsubscribe сигналов событий before и after теперь можно вызывать в раннем выполнении.

Следующие методы System теперь можно вызывать в раннем выполнении:

clearJob

clearRun

run

runInterval

runJob

runTimeout

waitTicks

Метод registerCustomComponent в BlockComponentRegistry теперь можно вызывать в раннем выполнении.

Метод registerCustomComponent в ItemComponentRegistry теперь можно вызывать в раннем выполнении.

Добавлено свойство startup в SystemBeforeEvents.

Добавлено событие StartupEvent.

Добавлен сигнал StartupEventSignal.

Изменено:
Свойство worldInitialize в WorldAfterEvents переименовано в worldLoad.

Свойство worldInitialize удалено из WorldBeforeEvents.

Событие WorldInitializeAfterEvent переименовано в WorldLoadAfterEvent.

Сигнал WorldInitializeAfterEventSignal переименован в WorldLoadAfterEventSignal.

Удалено событие WorldInitializeBeforeEvent.

Удалён сигнал WorldInitializeBeforeEventSignal.

Удалён метод Dimension.runCommandAsync, так как большинство команд не выполнялись асинхронно. Для асинхронного выполнения рекомендуется использовать Jobs через System.runJob.

Метод EntityComponent.getEntity теперь выбрасывает исключение, если связанная сущность недействительна (раньше возвращал undefined).

Свойство EntityInventoryComponent.container теперь выбрасывает исключение, если связанная сущность недействительна (раньше возвращал undefined).

Методы isValid в различных классах заменены на свойства только для чтения.

Методы getComponents, getComponent и hasComponent теперь выбрасывают исключение, если сущность недействительна.

Метод applyKnockback теперь принимает параметр VectorXZ для горизонтальной силы отбрасывания (включая величину) и параметр вертикальной силы. Для перехода с V1 нормализуйте прежний вектор направления и умножьте его на старое значение горизонтальной силы. Вертикальная сила осталась без изменений.

В EffectType:

Метод getName теперь всегда возвращает имя с префиксом minecraft:.

В Effect:

Свойство typeId теперь всегда возвращает имя с префиксом minecraft:.

Предмет minecraft:air удалён (остаётся допустимым блоком).

Промисы (Promises) теперь обрабатываются вместе с событиями after и системными задачами.

Метод system.waitTicks() теперь принимает минимальное значение 0 для выполнения в текущем тике.

Добавлено перечисление GraphicsMode и свойство Player.graphicsMode для проверки текущего графического режима игрока на сервере.

Добавлено свойство system.isEditorWorld в бета-версию @minecraft/server.

В BlockLocationIterator добавлен метод isValid(): boolean (бета), проверяющий, был ли итератор аннулирован из-за изменения связанного блочного объёма.

Добавлен API BlockMapColorComponent в бета-версию.

Добавлено перечисление TintMethod в бета-версию.

Изменения раннего выполнения в @minecraft/server 2.0.0-beta:
Следующие методы RegistrationBuilder теперь можно вызывать в раннем выполнении:

batch

maxAttempts

maxTicks

padding

required

requiredSuccessfulAttempts

rotateTest

setupTicks

structureName

tag

Функция register теперь может вызываться в раннем выполнении.

Функция registerAsync теперь может вызываться в раннем выполнении.

Исправлено:
Исправлена ошибка, из-за которой свойство typeId класса Effect переводилось в зависимости от языковых настроек.

Увеличено максимальное количество символов в строке Lore с 50 до 1000, а количество строк — с 20 до 100 при использовании ItemStack.setLore.

Добавлено (новые методы для Player):
Эти переопределения (Entity Overrides) применяются только к целевому игроку. Изменения вступают в силу на следующем тике и не затрагивают других игроков.

setPropertyOverrideForEntity: Переопределяет свойство сущности (Entity Property) для целевой сущности с указанным значением. Это свойство должно синхронизироваться с клиентом.

removePropertyOverrideForEntity: Удаляет переопределение указанного свойства сущности для целевой сущности.

clearPropertyOverridesForEntity: Удаляет все переопределения свойств сущности для целевой сущности.